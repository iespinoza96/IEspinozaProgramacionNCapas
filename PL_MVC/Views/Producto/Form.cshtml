@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Producto</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="form-control-static">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdProducto, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "hidden form-control" })
                            @Html.ValidationMessageFor(model => model.IdProducto)
                            @*hidden*@
                        </div>
                    </div>

                    <div class="form-group" >
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.PrecioUnitario)
                            @Html.TextBoxFor(model => model.PrecioUnitario,"{0:#.#}",  new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.PrecioUnitario)
                        </div>
                    </div>

                    <div class="form-group" >
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Stock)
                            @Html.TextBoxFor(model => model.Stock, "{0:#.#}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Stock)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Proveedor)
                            @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(Model.Proveedor.Proveedores, "IdProveedor", "Nombre"), "Selecciona una opción", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Proveedor.IdProveedor)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Departamento.Area)
                            @if (Model.Departamento.Area.Areas == null)
                            {
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(string.Empty, "Value", "Text"), "Seleciona un area", htmlAttributes: new { id = "ddlArea", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Seleciona un área", htmlAttributes: new { id = "ddlArea", @class = "form-control" })
                            }

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Departamento)

                            @if (Model.Departamento.Departamentos == null)
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(string.Empty, "Value", "Text"), "Selecione un departamento", htmlAttributes: new { id = "ddlDepartamento", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "Selecione un departamento", htmlAttributes: new { id = "ddlDepartamento", @class = "form-control" })
                            }

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Descripcion)
                            @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Descripcion)

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Imagen)
                            <input type="file" name="ImagenData" onchange="readURL(this);">
                            @if (Model.Imagen != null)
                            {
                                <img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />
                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Content/sinproducto.jpg" style=" height:150px; width:150px;" />
                            }

                            @Html.ValidationMessageFor(model => model.Imagen)
                        </div>

                    </div>

                    @Html.HiddenFor(model => model.Imagen)

                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>

               

            }

        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")

    <script type="text/javascript">

        $(document).ready(function () {

            $("#ddlArea").change(function () {
                
                $("#ddlDepartamento").empty();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDepartamento")',
                    data: { IdArea: $("#ddlArea").val() },
                    success: function (departamentos) {
                      

                        $.each(departamentos, function (i, departamentos) {
                            $("#ddlDepartamento").append('<option value="'
                                + departamentos.IdDepartamento + '">'
                                + departamentos.Nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed. ' + ex);
                    }
                });
            });
        })
 </script>

<script type="text/javascript">

        function readURL(input)
        {

            if (input.files && input.files[0])
            {
                var reader = new FileReader();
                reader.onload = function (e)
                {
                    $('#ImagenPreview').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>

</div>

